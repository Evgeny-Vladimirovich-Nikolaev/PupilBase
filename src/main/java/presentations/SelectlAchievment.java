/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentations;

import base.Pupil;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

/**
 *
 * @author Nobilis
 */
public class SelectlAchievment extends javax.swing.JFrame {
    private File f;
    private ArrayList<Pupil> Base;
    private ArrayList<Pupil> Delete;
    private int quarter;
    private boolean editable = false;
    
    public SelectlAchievment() {
        initComponents();
    }
    public SelectlAchievment(File file, ArrayList b, ArrayList del, int q) {
        f = file;
        Base = b;
        Delete = del;
        quarter = q;
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuEditable = new javax.swing.JMenuItem();
        menuApply = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuCancel = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); 
        jLabel1.setText("Успеваемость за " + tableTitle());
        
        getTable();


        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
))
            )
        );
        
        
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 23+Base.size()*20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        
        jMenuBar1.setBackground(new java.awt.Color(174, 220, 245));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(72, 25));

        menuFile.setText("Файл");
        menuFile.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jMenuBar1.add(menuFile);
        
        menuApply.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuApply.setText("Применить");
        menuApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuApplyActionPerformed(evt);
            }
        });
        menuFile.add(menuApply);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setText("Сохранить в файл");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        menuFile.add(menuSave);

        menuCancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menuCancel.setText("Выйти без сохранения");
        menuCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCancelActionPerformed(evt);
            }
        });
        menuFile.add(menuCancel);


        menuEdit.setText("Правка");
        menuEdit.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jMenuBar1.add(menuEdit);
        
        menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuEditable.setText("Разрешить редактирование");
        menuEditable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditableActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditable);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        
    
    private String tableTitle(){
            String title = "год";
            switch (quarter){
                case 0 : title = "1 четверть"; break;
                case 1 : title = "2 четверть"; break;
                case 2 : title = "3 четверть"; break;
                case 3 : title = "4 четверть"; break;
            }
            return title;
        }
    
    private void getTable(){
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [Base.size()][8] ,
            new String [] {
                "Фамилия, имя", "кл.", "Спец", "Соль", "Муз.Л", "Д/И", "Хор", "Анс."}
        ){
            boolean[] canEdit = new boolean [] {
                false, false, editable, editable, editable, editable, editable, editable};
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        jTable1.setRowHeight(20);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.getColumnModel().getColumn(0).setMinWidth(190);
        jTable1.getColumnModel().getColumn(1).setMinWidth(25);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(240);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(35);
        for (int row=2; row<8; row++){
            jTable1.getColumnModel().getColumn(row).setMinWidth(24); 
            jTable1.getColumnModel().getColumn(row).setMaxWidth(42); 
        }
        
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16));
        
        for(int row=0; row<Base.size(); row++){
            String[] ach = convertAchievment(Base.get(row).getAchievement());
            jTable1.setValueAt(Base.get(row).getName(), row, 0);
            jTable1.setValueAt(Base.get(row).getKlass(), row, 1);
            for(int col=2; col<8; col++){
                jTable1.setValueAt(ach[col-2], row, col);
            }
        }
        jScrollPane1.setViewportView(jTable1);
    }
    
    private String[] convertAchievment(String achiev){
        String a[] = new String [42];
        String aSelect[] = new String [6];
        int count = 0;
        for(int i=0; i<42; i++){
            a[i] = "";
        }
        for(int i=0; i<42; i++){
            while(achiev.charAt(count)!='¤'){
                a[i] += achiev.charAt(count);
                count++;
            }
            count++;
        }
        for(int i=0; i<6; i++){
            aSelect[i] = a[i*7+quarter];
        }
        String temp = aSelect[5];
        aSelect[5] = aSelect[4];
        aSelect[4] = aSelect[3];
        aSelect[3] = temp;
        return aSelect;
    }
    
    private void writeAchievment(){
        for (int i=0; i<Base.size(); i++) {
            String achiev = "";
            String[] select = new String[6];
            int count=0;
            for(int col=2; col<8; col++){
                if(col<5)select[col-2] = (String)jTable1.getValueAt(i, col);
                else if(col==5)select[col] = (String)jTable1.getValueAt(i, col);
                else select[col-3] = (String)jTable1.getValueAt(i, col);
            }
            for(int k=0; k<6; k++){
                for(int l=0; l<7; l++){
                    if(l!=quarter){
                        while(Base.get(i).getAchievement().charAt(count)!='¤'){
                            achiev += Base.get(i).getAchievement().charAt(count);
                            count++;
                        }
                    }
                    else {
                        achiev += select[k];
                        while(Base.get(i).getAchievement().charAt(count)!='¤')
                            count++;
                    }
                    achiev += '¤';
                    count++;
                }
            }
            Base.get(i).setAchievement(achiev);
        }
    }
    
    private void eraseFile(){
        try (BufferedWriter rewriter = 
                new BufferedWriter(new FileWriter(f, false))) {
                rewriter.write("");
                rewriter.flush();
                rewriter.close();
            }catch(IOException e){
           e.printStackTrace();}   
    }
    
    private void saveFile(){
        for(int i=0; i<Base.size(); i++){
            try{
            String s = Base.get(i).getAll();
            BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
            String lineSeparator = System.getProperty("line.separator");
            writer.write(s + lineSeparator);
            writer.flush();
            writer.close();
            }catch(IOException err){
            err.printStackTrace();
            }
        }
        if(Delete.size()!=0){
// Симво 'µ' отделяет в файле удалённые записи            
            try{
                String s = "" + 'µ';
                BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
                writer.write(s);
                writer.flush();
                writer.close();
                }catch(IOException err){
                err.printStackTrace();
                }
            for(int i=0; i<Delete.size(); i++){
                try{
                String s = Delete.get(i).getAll();
                BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
                String lineSeparator = System.getProperty("line.separator");
                writer.write(s + lineSeparator);
                writer.flush();
                writer.close();
                }catch(IOException err){
                err.printStackTrace();}
            }
        }
    }
    
    private void menuApplyActionPerformed(java.awt.event.ActionEvent evt) {                                          
        writeAchievment();
    }                                         

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {                                         
        writeAchievment();
        eraseFile();
        saveFile();
        ListStart list = new ListStart(f,Base, Delete);
        list.setBounds(215, 100, 850, 672);
        list.setVisible(true); 
        this.dispose();
    }                                        

    private void menuCancelActionPerformed(java.awt.event.ActionEvent evt) {                                           
        ListStart list = new ListStart(f,Base, Delete);
        list.setBounds(215, 100, 850, 672);
        list.setVisible(true); 
        this.dispose();
    }
    
    private void menuEditableActionPerformed(java.awt.event.ActionEvent evt) {                                          
        editable = !editable;
        if(editable){
            menuEditable.setText("Отменить редактирование");
            menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke
            (java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        }
        else {
            menuEditable.setText("Разершить редактирование");
            menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke
            (java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK 
            | java.awt.event.InputEvent.CTRL_MASK));
        }
        getTable();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelectlAchievment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelectlAchievment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelectlAchievment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelectlAchievment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelectlAchievment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuEditable;
    private javax.swing.JMenuItem menuApply;
    private javax.swing.JMenuItem menuCancel;
    private javax.swing.JMenuItem menuSave;
    // End of variables declaration                   
}
