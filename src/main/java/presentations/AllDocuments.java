/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentations;

import base.Pupil;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

/**
 *
 * @author Nobilis
 */
public class AllDocuments extends javax.swing.JFrame {
    private File f;
    private ArrayList<Pupil> Base;
    private ArrayList<Pupil> Delete;
    private boolean editable = false;
    public AllDocuments() {
        initComponents();
    }
    public AllDocuments(File file, ArrayList b, ArrayList del) {
        f = file;
        Base = b;
        Delete = del;
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        label_Pupil = new javax.swing.JLabel();
        label_Mother = new javax.swing.JLabel();
        label_Father = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuEditable = new javax.swing.JMenuItem();
        menuApply = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuCancel = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label_Pupil.setText("Ученик");
        label_Pupil.setFont(new java.awt.Font("Tahoma", 0, 18));

        label_Mother.setText("Мать");
        label_Mother.setFont(new java.awt.Font("Tahoma", 0, 18));
        label_Mother.setAutoscrolls(true);
        
        label_Father.setText("Отец");
        label_Father.setFont(new java.awt.Font("Tahoma", 0, 18));
        label_Father.setAutoscrolls(true);
        
        getTable();
        
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_Pupil, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_Mother, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_Father, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
            )
        );
        
        
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(label_Pupil)
                    .addComponent(label_Mother)
                    .addComponent(label_Father))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 23+Base.size()*20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        
        jMenuBar1.setBackground(new java.awt.Color(174, 220, 245));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(72, 25));

        menuFile.setText("Файл");
        menuFile.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jMenuBar1.add(menuFile);
        
        menuApply.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuApply.setText("Применить");
        menuApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuApplyActionPerformed(evt);
            }
        });
        menuFile.add(menuApply);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setText("Сохранить в файл");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        menuFile.add(menuSave);

        menuCancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        menuCancel.setText("Выйти без сохранения");
        menuCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCancelActionPerformed(evt);
            }
        });
        menuFile.add(menuCancel);


        menuEdit.setText("Правка");
        menuEdit.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jMenuBar1.add(menuEdit);
        
        menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuEditable.setText("Разрешить редактирование");
        menuEditable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditableActionPerformed(evt);
            }
        });
        menuEdit.add(menuEditable);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void getTable(){
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [Base.size()][13], 
            new String [] {
                "Фамилия, Имя", "Заявление", "Договор", "свид./паспорт", "мед. справка", "СНИЛС", "Фото", "Паспорт", "СНИЛС", "Согласие", "Паспорт", "СНИЛС", "Согласие"
            }
        ) {
            Class[] types = new Class [] {
                Object.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class, Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
            boolean[] canEdit = new boolean [] {
                false, editable, editable, editable, editable, editable, editable, 
                editable, editable, editable, editable, editable, editable};
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        jTable1.setRowHeight(20);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(280);
        jTable1.getColumnModel().getColumn(0).setMinWidth(120);
        for(int i=1; i<13; i++){
            jTable1.getColumnModel().getColumn(i).setMaxWidth(85);
            jTable1.getColumnModel().getColumn(i).setMinWidth(60);
        }
        
        
        for (int row=0; row<Base.size(); row++) {
            jTable1.setValueAt(Base.get(row).getName(), row, 0);
            for(int col=1; col<13; col++){
                jTable1.setValueAt(Base.get(row).getDocuments()[col-1], row, col);
            }
        }
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16));  
        
        
        jScrollPane1.setViewportView(jTable1);
    }
    
    private void writeDocuments(){
        for(int row=0; row<jTable1.getRowCount(); row++){
            for(int col=1; col<13; col++){
                Base.get(row).setDocuments(col-1, (boolean)jTable1.getValueAt(row, col));
            }
        }
    }
    
        private void eraseFile(){
        try (BufferedWriter rewriter = 
                new BufferedWriter(new FileWriter(f, false))) {
                rewriter.write("");
                rewriter.flush();
                rewriter.close();
            }catch(IOException e){
           e.printStackTrace();}   
    }
    
    private void saveFile(){
        for(int i=0; i<Base.size(); i++){
            try{
            String s = Base.get(i).getAll();
            BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
            String lineSeparator = System.getProperty("line.separator");
            writer.write(s + lineSeparator);
            writer.flush();
            writer.close();
            }catch(IOException err){
            err.printStackTrace();
            }
        }
        if(Delete.size()!=0){
// Симво 'µ' отделяет в файле удалённые записи            
            try{
                String s = "" + 'µ';
                BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
                writer.write(s);
                writer.flush();
                writer.close();
                }catch(IOException err){
                err.printStackTrace();
                }
            for(int i=0; i<Delete.size(); i++){
                try{
                String s = Delete.get(i).getAll();
                BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
                String lineSeparator = System.getProperty("line.separator");
                writer.write(s + lineSeparator);
                writer.flush();
                writer.close();
                }catch(IOException err){
                err.printStackTrace();}
            }
        }
    }
    
    private void menuEditableActionPerformed(java.awt.event.ActionEvent evt){                                          
        editable = !editable;
        if(editable){
            menuEditable.setText("Отменить редактирование");
            menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke
            (java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        }
        else {
            menuEditable.setText("Разершить редактирование");
            menuEditable.setAccelerator(javax.swing.KeyStroke.getKeyStroke
            (java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK 
            | java.awt.event.InputEvent.CTRL_MASK));
        }
        getTable();
    }
    
    private void menuApplyActionPerformed(java.awt.event.ActionEvent evt) {                                          
        writeDocuments();
    }                                         

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {                                         
        writeDocuments();
        eraseFile();
        saveFile();
        ListStart list = new ListStart(f,Base, Delete);
        list.setBounds(215, 100, 850, 672);
        list.setVisible(true); 
        this.dispose();
    }                                        

    private void menuCancelActionPerformed(java.awt.event.ActionEvent evt) {                                           
        ListStart list = new ListStart(f,Base, Delete);
        list.setBounds(215, 100, 850, 672);
        list.setVisible(true); 
        this.dispose();
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllDocuments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllDocuments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllDocuments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllDocuments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllDocuments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel label;
    private javax.swing.JLabel label_Pupil;
    private javax.swing.JLabel label_Mother;
    private javax.swing.JLabel label_Father;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuApply;
    private javax.swing.JMenuItem menuEditable;
    private javax.swing.JMenuItem menuCancel;
    private javax.swing.JMenuItem menuSave;
    // End of variables declaration                   
}
